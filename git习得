cd + 目录名  把command line 切换到当前文件夹，前提是该文件夹在命令行显示的目录，
mac终端打开应该是~


git init 因为已经切换到当前文件夹，你现在输入的指令就是针对当前文件夹的，该指令指把该
目录变成Git可以管理的仓库。


一、把文件放在该目录后用指令：git add file
意思是把该文件从工作区添加到git托管，放进stage，或者叫index，暂存区，注意此时该文件并没有放到
git的master主分支。
该命令可以这么操作：
git add file1 file2 file3
可以一次性提交多个文件到暂存区。

二、用git commit -m"xxx"提交更改，实际上就是把暂存区的所有内容提交到当前的主分支。
说明-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便
地找到改动记录，养成一个好习惯，写清楚提交说明，方便你管理。

因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往
master分支上提交更改。

你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。

git status命令可以让我们时刻掌握仓库当前的状态

虽然Git告诉我们readme.txt被修改了，但如果能看看具体修改了什么内容岂不美滋滋，但是你如果忘了
怎么修改的，就可以用这个命令：
git diff file
顾名思义就是查看difference，显示的格式正是Unix通用的diff格式，可以从命令输出看到

一旦你把文件改乱了，或者误删了文件，还可以从最近的一个commit恢复，然后继续工作。在实际工作中，
我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。
git这个commit的概念，就是版本号。怎么查看呢？版本控制系统肯定有某个命令可以告诉我们历史记录，
在Git中，我们用git log命令查看
如果觉得git log这个命令给的信息太多，可以加上一点儿指令简化log信息
git log --pretty=oneline
你看到的那一大串的数字就是所谓commit id版本号
有两种方法往前退，有一种方法往“未来”去。在这之前先解决另一个概念
因为Git在内部有个指向当前版本的HEAD指针，它来控制指向的版本。
